package com.osmp4j.data.osm.features

object OSMHighway : OSMFeature<OSMHighway>("highway") {
    val MOTORWAY = value("motorway")
    val MOTORWAY_LINK = value("motorway_link")
    val PRIMARY = value("primary")
    val PRIMARY_LINK = value("primary_link")
    val RESIDENTIAL = value("residential")
    val SECONDARY = value("secondary")
    val SECONDARY_LINK = value("secondary_link")
    val TERTIARY = value("tertiary")
    val TERTIARY_LINK = value("tertiary_link")
    val TRUNK = value("trunk")
    val TRUNK_LINK = value("trunk_link")
    val UNCLASSIFIED = value("unclassified")
    val LIVING_STREET = value("living_street")
    val SERVICE = value("service")
    val PEDESTRIAN = value("pedestrian")
    val TRACK = value("track")
    val BUS_GUIDEWAY = value("bus_guideway")
    val ESCAPE = value("escape")
    val RACEWAY = value("raceway")
    val ROAD = value("road")
    val FOOTWAY = value("footway")
    val BRIDLEWAY = value("bridleway")
    val STEPS = value("steps")
    val PATH = value("path")
    val CYCLEWAY = value("cycleway")
    val PROPOSED = value("proposed")
    val CONSTRUCTION = value("construction")
    val BUS_STOP = value("bus_stop")
    val CROSSING = value("crossing")
    val ELEVATOR = value("elevator")
    val EMERGENCY_ACCESS_POINT = value("emergency_access_point")
    val GIVE_WAY = value("give_way")
    val MINI_ROUNDABOUT = value("mini_roundabout")
    val MOTORWAY_JUNCTION = value("motorway_junction")
    val PASSING_PLACE = value("passing_place")
    val REST_AREA = value("rest_area")
    val SPEED_CAMERA = value("speed_camera")
    val STREET_LAMP = value("street_lamp")
    val SERVICES = value("services")
    val STOP = value("stop")
    val TRAFFIC_SIGNALS = value("traffic_signals")
    val TURNING_CIRCLE = value("turning_circle")
    val TOLL_GANTRY = value("toll_gantry")
    val USER_DEFINED = value("User Defined")

    val ABUTTERS = attr("abutters")
    val BICYCLE_ROAD = attr("bicycle_road")
    val DRIVING_SIDE = attr("driving_side")
    val EMBEDDED_RAILS = attr("embedded_rails")
    val FORD = attr("ford")
    val ICE_ROAD = attr("ice_road")
    val INCLINE = attr("incline")
    val JUNCTION = attr("junction")
    val LANES = attr("lanes")
    val LIT = attr("lit")
    val MOTORROAD = attr("motorroad")
    val MOUNTAIN_PASS = attr("mountain_pass")
    val MTB_SCALE = attr("mtb:scale")
    val MTB_SCALE_UPHILL = attr("mtb:scale:uphill")
    val MTB_SCALE_IMBA = attr("mtb:scale:imba")
    val MTB_DESCRIPTION = attr("mtb:description")
    val OVERTAKING = attr("overtaking")
    val PARKING_CONDITION = attr("parking:condition")
    val PARKING_LANE = attr("parking:lane")
    val PASSING_PLACES = attr("passing_places")
    val SAC_SCALE = attr("sac_scale")
    val SURFACE = attr("surface")
    val TACTILE_PAVING = attr("tactile_paving")
    val TRACKTYPE = attr("tracktype")
    val TRAFFIC_CALMING = attr("traffic_calming")
    val TRAIL_VISIBILITY = attr("trail_visibility")
    val WINTER_ROAD = attr("winter_road")

}
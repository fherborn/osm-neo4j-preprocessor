buildscript {
    ext {
        kotlinVersion = '1.3.41'
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }

    dependencies {
        classpath("se.transmode.gradle:gradle-docker:1.2")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'

group = 'com.osmp4j'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven { url = uri("https://repo.spring.io/milestone") }
    maven { url = uri("https://repo.spring.io/snapshot") }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-amqp")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("com.osmp4j:core:0.0.1")
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.1')
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = archivesBaseName
    baseImage = 'openjdk:8-jdk-alpine'
    maintainer = 'Florian Herborn "florian.herborn@th-koeln.de"'
    tag = "osmp4j/${applicationName}"
    tagVersion = "latest"
    def jarName = "{$applicationName}-${version}.jar"
    exposePort(8080)
    addFile("${jar.archivePath}", jarName)
    entryPoint(['java',"-Djava.security.egd=file:/dev/./urandom","-jar","/${jarName}"])
}


compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}